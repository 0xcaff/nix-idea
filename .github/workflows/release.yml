name: Publish release

on:
  push:
    tags: [ 'v*' ]

jobs:
  build:

    name: Publish release
    runs-on: ubuntu-latest

    steps:
    # Setup environment
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    # Build
    - name: Build plugin
      id: gradle-build
      run: ./gradlew verifyPlugin build
    # Upload artifacts
    - name: Upload build reports
      if: steps.gradle-build.outcome == 'success' || steps.gradle-build.outcome == 'failure'
      uses: actions/upload-artifact@v2
      with:
        name: build-reports
        path: build/reports/
        if-no-files-found: ignore
    - name: Upload build result
      uses: actions/upload-artifact@v2
      with:
        name: build-result
        path: build/distributions/
        if-no-files-found: error
    # Create GitHub release
    - name: Get changelog
      run: |
        ./gradlew getChangelog --console=plain -q --no-header --unreleased \
          > latest_changelog.md
    - name: Get name of ZIP
      id: get-zip-name
      run: |
        echo "::set-output name=zip-name::$(basename ./build/distributions/*.zip)"
    - name: Create GitHub release
      uses: actions/create-release@v1
      id: create_release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ github.ref }}
        body_path: ./latest_changelog.md
    - name: Upload asset for GitHub release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./build/distributions/${{ steps.get-zip-name.outputs.zip-name }}
        asset_name: ${{ steps.get-zip-name.outputs.zip-name }}
        asset_content_type: application/zip
    # Upload to JetBrains Marketplace
    - name: Upload to JetBrains Marketplace
      env:
        JETBRAINS_TOKEN: ${{ secrets.JETBRAINS_TOKEN }}
      run: ./gradlew publishPlugin
